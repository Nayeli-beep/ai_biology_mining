from Bio import Entrez
import pandas as pd
import time
import json


Entrez.email = "youremail@example.com"

ai_term = ["Artificial Intelligence", "Machine learning", "Deep learning"]
bio_term =["Neuroscience", "Biomedicine","Biochemistry"]

dict_terms={}

for i in bio_term:
  tms[i]=ai_term

print(dict_terms)

def pubmed_data(terms, start_year="2000", end_year="2025", max_res=3):
    sugg = f"{terms}[Title/Abstract] AND ({start_year}:{end_year}[crdt])"
    handle = Entrez.esearch(db="pubmed", term=sugg, retmax=max_res)
    results = Entrez.read(handle)
    return results.get("IdList",[])

def details_rec(pmid): 
  paper_details=[]
  handle = Entrez.efetch(db="pubmed", id=pmid, retmode="xml")
  docs= Entrez.read(handle)

  #print(json.dumps(docs, indent=4, default=str))

  for doc in docs['PubmedArticle]:
      paper = doc['MedlineCitation']['Article']
  
      title = paper['ArticleTitle']
      abstract = ' '.join(paper['Abstract']['AbstractText']) if 'Abstract' in paper and 'AbstractText' in paper['Abstract'] else 'Abstract not avaible'
      year = paper['Journal']['JournalIssue']['PubDate'].get('Year', 'No year found')
      keywords = ','.join(k['DescriptorName'] for k in doc['MedlineCitation'].get('MeshHeadingList', [])) or 'Keywords Not Avaible'
      url = f"https://www.ncbi.nlm.nih.gov/pubmed/{pmid}"

      deeetails.append({
          "title": title,
          "abstract": abstract,
          "year": year,
          "keywords": keywords,
          "search_tms": search_tms,
          "url": url})

      pubmed_base=pd.DataFrame({
          'PMID':[pmid],
          'Title':[title],
          'Abstract':[abstract],
          'Year':[year],
          'Keywords': [keywords],
          'Search_terms': [search_tms],
          'URL': [url]})

      df=pd.concat([df,pubmed_base], ignore_index=True)

  time.sleep(1)
  handle.close()

 print(df)
 return deeetails
